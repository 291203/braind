<?php
//Один широко известный в узких кругах маркетплейс захотел реализовать в карточке товаров агрегацию отзывов от других интернет-магазинов.
//Разработчики написали алгоритм парсинга и агрегации таких данных. Но при тестировании выяснилось,
//что агрессивный парсинг страниц одного интернет магазина с товарами триггерит автоматическую защиту.
//В результате написанный алгоритм в ответ на запрос получает капчу с требованием ее прочитать.
//Отдел тестирования быстро выявил закономерность изображений - на них отображаются закрашенные геометрические фигуры (круг, квадрат или треугольник).
//Перед уходом в отпуск разработчик механизма парсинга реализовал код,
//который разбивает капчу на отдельные изображения и конвертирует их в черно-белое растровое изображение закодированное двумя цифрами,
//где 0 - белый пиксел, 1 - черный.
//На белом фоне в каждом изображении находится только одна фигура, она не касается границ изображения и не выходит за его рамки.
//Диаметр фигуры или размер самой большой стороны не меньше 30 пикселей, а размер меньшего угла в треугольнике не меньше 10 градусов.
//Задача
//В поток ввода данных приходит первая строка, в которой находятся два числа X и Y - это ширина и высота передаваемого изображения (32 ≤ X, Y ≤ 2000).
//Далее идут Y строк по X чисел 0 или 1, которые представляют из себя сконвертированное изображение. Числа в строке разделены пробелом.
//Результат работы программы
//Выведите слово (circle, triangle или square) в зависимости от того какая фигура представлена на изображении.
//Результат: ссылка на репозиторий с кодом и ваши комментарии.



function detectShape($image, $width, $height) {
    // Находим границы фигуры
    $minX = $width;
    $maxX = 0;
    $minY = $height;
    $maxY = 0;

    for ($y = 0; $y < $height; $y++) {
        for ($x = 0; $x < $width; $x++) {
            if ($image[$y][$x] == 1) {
                if ($x < $minX) $minX = $x;
                if ($x > $maxX) $maxX = $x;
                if ($y < $minY) $minY = $y;
                if ($y > $maxY) $maxY = $y;
            }
        }
    }

    // Определяем тип фигуры
    $shapeWidth = $maxX - $minX + 1;
    $shapeHeight = $maxY - $minY + 1;

    // Если ширина и высота равны, это может быть квадрат или круг
    if ($shapeWidth == $shapeHeight) {
        // Проверяем, является ли это кругом
        $isCircle = true;
        $radius = $shapeWidth / 2;
        $centerX = $minX + $radius;
        $centerY = $minY + $radius;

        for ($y = $minY; $y <= $maxY; $y++) {
            for ($x = $minX; $x <= $maxX; $x++) {
                if ($image[$y][$x] == 1) {
                    $distance = sqrt(pow($x - $centerX, 2) + pow($y - $centerY, 2));
                    if (abs($distance - $radius) > 1) {
                        $isCircle = false;
                        break 2;
                    }
                }
            }
        }

        if ($isCircle) {
            return "circle";
        } else {
            return "square";
        }
    } else {
        // Если ширина и высота не равны, это треугольник
        return "triangle";
    }
}

// Чтение входных данных через консоль
$handle = fopen("php://stdin", "r");
$dimensions = explode(" ", trim(fgets($handle)));
$width = (int)$dimensions[0];
$height = (int)$dimensions[1];

$image = [];
for ($i = 0; $i < $height; $i++) {
    $image[] = array_map('intval', explode(" ", trim(fgets($handle))));
}
fclose($handle);

// Определяем тип фигуры
$shape = detectShape($image, $width, $height);
echo $shape;


?>
<html>
    
</html>

